SetAlfa=[[-1,-1,-1],[-1,-1,0],[-1,-1,1],[-1,0,-1],[-1,0,0],[-1,0,1],[-1,1,-1],[-1,1,0],[-1,1,1],
         [0,-1,-1],[0,-1,0],[0,-1,1],[0,0,-1],[0,0,0],[0,0,1],[0,1,-1],[0,1,0],[0,1,1],
         [1,-1,-1],[1,-1,0],[1,-1,1],[1,0,-1],[1,0,0],[1,0,1],[1,1,-1],[1,1,0],[1,1,1],
         [-1,-1,0,-1,-1,-1],[-1,-1,0,-1,-1,1],
         [-1,0,-1,-1,-1,-1],[-1,0,-1,-1,1,-1],
         [-1,0,0,-1,-1,-1],[-1,0,0,-1,-1,0],[-1,0,0,-1,-1,1],[-1,0,0,-1,0,-1],[-1,0,0,-1,0,1],[-1,0,0,-1,1,-1],[-1,0,0,-1,1,0],[-1,0,0,-1,1,1],
         [-1,0,1,-1,-1,1],[-1,0,1,-1,1,1],
         [-1,1,0,-1,1,-1],[-1,1,0,-1,1,1],
         [0,-1,-1,-1,-1,-1],[0,-1,-1,1,-1,-1],
         [0,-1,0,-1,-1,-1],[0,-1,0,-1,-1,0],[0,-1,0,-1,-1,1],[0,-1,0,0,-1,-1],[0,-1,0,0,-1,1],[0,-1,0,1,-1,-1],[0,-1,0,1,-1,0],[0,-1,0,1,-1,1],
         [0,-1,1,-1,-1,1],[0,-1,1,-1,-1,1],
         [0,0,-1,-1,-1,-1],[0,0,-1,-1,0,-1],[0,0,-1,-1,1,-1],[0,0,-1,0,-1,-1],[0,0,-1,0,1,-1],[0,0,-1,1,-1,-1],[0,0,-1,1,0,-1],[0,0,-1,1,1,-1],
         [0,0,0,-1,-1,-1],[0,0,0,-1,-1,0],[0,0,0,-1,-1,1],[0,0,0,-1,0,-1],[0,0,0,-1,0,0],[0,0,0,-1,0,1],[0,0,0,-1,1,-1],[0,0,0,-1,1,0],[0,0,0,-1,1,1],[0,0,0,0,-1,-1],[0,0,0,0,-1,0],[0,0,0,0,-1,1],[0,0,0,0,0,-1],[0,0,0,0,0,1],[0,0,0,0,1,-1],[0,0,0,0,1,0],[0,0,0,0,1,1],[0,0,0,1,-1,-1],[0,0,0,1,-1,0],[0,0,0,1,-1,1],[0,0,0,1,0,-1],[0,0,0,1,0,0],[0,0,0,1,0,1],[0,0,0,1,1,-1],[0,0,0,1,1,0],[0,0,0,1,1,1],
         [0,0,1,-1,-1,1],[0,0,1,-1,0,1],[0,0,1,-1,1,1],[0,0,1,0,-1,1],[0,0,1,0,1,1],[0,0,1,1,-1,1],[0,0,1,1,0,1],[0,0,1,1,1,1],
         [0,1,-1,-1,1,-1],[0,1,-1,1,1,-1],
         [0,1,0,-1,1,-1],[0,1,0,-1,1,0],[0,1,0,-1,1,1],[0,1,0,0,1,-1],[0,1,0,0,1,1],[0,1,0,1,1,-1],[0,1,0,1,1,0],[0,1,0,1,1,1],
         [0,1,1,-1,1,1],[0,1,1,1,1,1],
         [1,-1,0,1,-1,-1],[1,-1,0,1,-1,1],
         [1,0,-1,1,-1,-1],[1,0,-1,1,1,-1],
         [1,0,0,1,-1,-1],[1,0,0,1,-1,0],[1,0,0,1,-1,1],[1,0,0,1,0,-1],[1,0,0,1,0,1],[1,1,-1],[1,0,0,1,1,0],[1,0,0,1,1,1],
         [1,0,1,1,-1,1],[1,0,1,1,1,1],
         [1,1,0,1,1,-1],[1,1,0,1,1,1]
         ]
         
GAlfaBeta = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[], [],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[], [],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[], [],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[], [],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]

def NumAB(AlfaBeta):
    for i in range(125):
        if AlfaBeta==SetAlfa[i]:
            return i
           
    

n = int(input("Введите порядок фрактального куба: "))
print()
m1 = int(input("Введите мощность множества единиц D1: "))
print("Введите множество единиц D1:")
d1 = [] 
for x in range(m1): 
    d1.append([int(y) for y in input().split()])    
print()
m2 = int(input("Введите мощность множества единиц D2: "))
print("Введите множество единиц D2:")
d2 = [] 
for x in range(m2): 
    d2.append([int(y) for y in input().split()]) 
print()
print(d1)
print(d2)
print()

for i1 in [-1,0,1]:
    for i2 in [-1,0,1]:
        for i3 in [-1,0,1]:
            print([i1,i2,i3])
            for dd1 in d1:
                for dd2 in d2:
                    if (dd1[0]==dd2[0]+(n-1)*i1) and (dd1[1]==dd2[1]+(n-1)*i2) and (dd1[2]==dd2[2]+(n-1)*i3):
                       GAlfaBeta[NumAB([i1,i2,i3])].append(dd1)
                       
            GAlfaBeta[NumAB([i1,i2,i3])]
            print() 
            
print(GAlfaBeta)
input()
